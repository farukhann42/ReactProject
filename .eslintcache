[{"C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\index.tsx":"1","C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\pages\\UserDetails.tsx":"2","C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\reportWebVitals.ts":"3","C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\App.tsx":"4","C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\pages\\Home.tsx":"5"},{"size":556,"mtime":1608075962764,"results":"6","hashOfConfig":"7"},{"size":7004,"mtime":1608131906396,"results":"8","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":190,"mtime":1608052237190,"results":"10","hashOfConfig":"7"},{"size":2032,"mtime":1608122649923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"snb3uk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\index.tsx",[],["25","26"],"C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\pages\\UserDetails.tsx",["27","28","29","30","31"],"import React, {useEffect, useRef, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from 'react-router-dom';\nimport {Button, Modal} from \"react-bootstrap\";\n\ninterface IPosts {\n    userId: number\n    id: number\n    title: string\n    body: string\n}\n\ninterface IComments {\n    postId: number\n    id: number\n    name: string\n    email: string\n    body: string\n}\n\nfunction UserDetails(props) {\n    const [imageUrl] = useState('https://scott88lee.github.io/FMX/img/avatar.jpg');\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [commentId, setcommentId] = useState();\n    const [show, setShow] = useState(false);\n\n    const handleCommentsModalClose = () => {\n        setShow(false);\n    };\n    const handleCommentsModalShow = (commentId) => {\n        setcommentId(commentId);\n        setShow(true);\n    };\n\n\n    const {user} = props.location.state\n    useEffect(() => {\n        async function fetchData() {\n            axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`)\n                .then(res => {\n                    setPosts(res.data);\n                })\n        }\n\n        fetchData();\n    }, [posts, user.id]);\n\n    useEffect(() => {\n        async function fetchData() {\n            axios.get(`https://jsonplaceholder.typicode.com/posts/${commentId}/comments`)\n                .then(res => {\n                    setComments(res.data);\n                })\n        }\n        fetchData();\n    }, [commentId, user.id]);\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row mt-5 align-items-center\">\n                    <div className=\"col-8\">\n                        <h1 className=\"display-2\">{user.name}</h1>\n                    </div>\n\n                    <div className=\"col-4 text-right\">\n                        <img src={imageUrl} width=\"75%\" height=\"auto\" alt=\"user-image\"/>\n                    </div>\n                </div>\n\n                <div className=\"ml-1 mb-5 user-info\">\n                    <h3 className=\"my-4\">Email Adresi: <span className=\"text-muted ml-2\">{user.email}</span></h3>\n\n                    <h3 className=\"my-4\">Yaşadığı Şehir: <span className=\"text-muted ml-2\">{user.address.city}</span>\n                    </h3>\n\n                    <h3 className=\"my-4\">Telefon Numarası: <span className=\"text-muted ml-2\">{user.phone}</span></h3>\n\n                    <h3 className=\"my-4\">Web Sitesi: <span className=\"text-muted ml-2\">{user.website}</span></h3>\n                </div>\n\n                {/* Jsondan gelen gönderiler listeleniyor /user-details/:id */}\n                {\n                    posts.map((post: IPosts) => (\n                        <div key={post.id} className=\"row mb-5\">\n                            <div className=\"card w-100\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{post.title}</h5>\n                                    <p className=\"card-text\">{post.body}</p>\n                                    <a type=\"button\" className=\"w-50\" onClick={() => handleCommentsModalShow(post.id)}>Yorumlar</a>\n                                </div>\n\n                                <Modal className=\"mt-2\" show={show} onHide={handleCommentsModalClose}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Yorumlar</Modal.Title>\n                                    </Modal.Header>\n\n                                    {/* Jsondan gelen commentler listeleniyor => modal içerisinde*/}\n                                    <Modal.Body>\n                                        {\n                                            comments.map((comment: IComments) => (\n                                                <div key={comment.id} className=\"card p-3 m-3\">\n                                                    <h5 className=\"text-muted\">{comment.email}</h5>\n                                                    <h5 className=\"card-title\"><strong>{comment.name}</strong></h5>\n                                                    <p className=\"card-text\">{comment.body}</p>\n                                                </div>\n                                            ))\n                                        }\n                                    </Modal.Body>\n\n                                    <Modal.Footer className=\"d-block\">\n                                        <div className=\"container\">\n                                            <form>\n                                                <h3 className=\"text-muted text-center w-100 mt-2 mb-4\">Gönderi Hakkında Yorum Yapın</h3>\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"email\"\n                                                        className=\"form-control\"\n                                                        id=\"exampleInputEmail1\"\n                                                        aria-describedby=\"emailHelp\"\n                                                        placeholder=\"Email\"\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Başlık\"\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                        <textarea className=\"form-control\"\n                                                                  id=\"exampleFormControlTextarea1\"\n                                                                  minLength={10}\n                                                                  placeholder=\"İçerik (En Az 10 Karakter Giriniz)\"\n                                                        />\n                                                </div>\n\n                                                <button type=\"submit\" className=\"btn btn-primary w-100\">Submit</button>\n                                            </form>\n                                        </div>\n                                    </Modal.Footer>\n                                </Modal>\n                            </div>\n                        </div>\n                    ))}\n            </div>\n        </>\n    );\n}\n\nexport default UserDetails;\n","C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\reportWebVitals.ts",[],"C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\App.tsx",[],"C:\\Users\\HW\\Desktop\\untitled1\\react-project\\src\\pages\\Home.tsx",["32"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\n// @ts-ignore\nimport {Link} from 'react-router-dom';\n\ninterface IUser {\n    id: number\n    name: string\n    username: string\n    email: string\n    address: object\n    phone: string\n    website: string\n    company: object\n}\n\nfunction Home() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [users, setUsers] = useState([]);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [imageUrl] = useState('https://scott88lee.github.io/FMX/img/avatar.jpg');\n\n    useEffect(() => {\n        async function fetchData() {\n            axios.get('https://jsonplaceholder.typicode.com/users')\n                .then(res => {\n                    console.log(res.data)\n                    setUsers(res.data);\n                })\n        }\n\n        fetchData();\n    }, [setUsers]);\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {/* Jsondan alınan sonuçlar listelendi */}\n                    {users.map((user: IUser) => (\n                            <div key={user.id} className=\"col-4 p-3\">\n                                <div className=\"card card-size\">\n                                    <img className=\"card-img-top\" src={imageUrl}\n                                         alt=\"user-image\"/>\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">{user.name}</h5>\n                                        <p className=\"card-text\">{user.email}</p>\n                                        <Link to={{pathname:`/user-details/${user.id}`, state: {user}}} className=\"btn btn-outline-primary\">User Details</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":27,"nodeType":"39","messageId":"40","endLine":1,"endColumn":33},{"ruleId":"37","severity":1,"message":"41","line":3,"column":9,"nodeType":"39","messageId":"40","endLine":3,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":4,"column":9,"nodeType":"39","messageId":"40","endLine":4,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":68,"column":25,"nodeType":"45","endLine":68,"endColumn":89},{"ruleId":"46","severity":1,"message":"47","line":91,"column":37,"nodeType":"45","endLine":91,"endColumn":120},{"ruleId":"43","severity":1,"message":"44","line":43,"column":37,"nodeType":"45","endLine":44,"endColumn":60},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]